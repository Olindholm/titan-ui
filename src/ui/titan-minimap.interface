<?xml version="1.0" encoding="UTF-8"?>
<interface name="titan_minimap" onloadlua="Init()">
    <!-- Lua -->
	<lua file="/ui/titan-minimap.lua"/>

    <!-- Interface -->
    <panel name="minimap_panel_left" group="game_mini_map" visible="true" width="29.8h" height="29.8h" align="left" valign="bottom" noclick="true">
		<panel x="0.5h" y="-0.5h" width="23.2h" height="23.2h" align="left" valign="bottom" clip="true">
			<map hoversize="0.5" outlinesize="0.19h" width="23.2h" height="23.2h" name="minimap_left" texture="!minimap_texture" watch="Minimap" onclick="If(MinimapClick(param0, param1), BreakDrag());" onrightclick="If(MinimapRightClick(param0, param1), BreakDrag());"/>
		</panel>
		<image texture="/ui/common/bot_left.tga" valign="bottom" noclick="1"/>
		<panel color="invisible" x="0.35h" y="4.6h" height="2.1h" width="2.1h" >
			<button noclick="1" cvar="cg_unitPlayerColors" numstates="2" color="invisible" interactive="false">
				<widgetstate statename="up" >
					<image texture="/ui/elements/team_colors_up.tga"/>
				</widgetstate>
				<widgetstate statename="up2" >
					<image texture="/ui/elements/team_colors_up2.tga"/>
				</widgetstate>
			</button>
			<button
				texture="/ui/elements/button_roundhl.tga"
				onclicklua="Set('cg_unitPlayerColors', not GetCvarBool('cg_unitPlayerColors')) GetWidget('teamcolors_tooltip', 'game'):SetVisible(0)"
				onmouseoverlua="GetWidget('teamcolors_tooltip', 'game'):SetVisible(1)"
				onmouseoutlua="GetWidget('teamcolors_tooltip', 'game'):SetVisible(0)"
				interactive="false"
			/>

		</panel>
	</panel>

	<!-- Map Right (Alt View) -->
	<panel name="minimap_panel_right" group="game_mini_map" visible="false" width="29.8h" height="29.8h" align="right" valign="bottom" noclick="true">
		<panel x="-0.5h" y="-0.5h" width="23.2h" height="23.2h" align="right" valign="bottom" clip="true">
			<map hoversize="0.5" outlinesize="0.19h" width="23.2h" height="23.2h" name="minimap_right" texture="!minimap_texture" watch="Minimap" onclick="If(MinimapClick(param0, param1), BreakDrag());" onrightclick="If(MinimapRightClick(param0, param1), BreakDrag());"/>
		</panel>
		<image name="h_flip_test_back" hflip="1" texture="/ui/common/bot_left.tga" valign="bottom" noclick="1"/>
		<panel color="invisible" x="-0.35h" y="4.6h" align="right" height="2.1h" width="2.1h" >
			<button noclick="1" cvar="cg_unitPlayerColors" numstates="2" color="invisible" interactive="false">
				<widgetstate statename="up" >
					<image texture="/ui/elements/team_colors_up.tga"/>
				</widgetstate>
				<widgetstate statename="up2" >
					<image texture="/ui/elements/team_colors_up2.tga"/>
				</widgetstate>
			</button>
			<button
				texture="/ui/elements/button_roundhl.tga"
				onclicklua="Set('cg_unitPlayerColors', not GetCvarBool('cg_unitPlayerColors')) GetWidget('team_colors_tooltip_altview', 'game'):SetVisible(0)"
				onmouseoverlua="GetWidget('team_colors_tooltip_altview', 'game'):SetVisible(1)"
				onmouseoutlua="GetWidget('team_colors_tooltip_altview', 'game'):SetVisible(0)"
				interactive="false"
			/>

		</panel>
	</panel>

	<template name="minimap_inventory_item_hiding">
		<panel width="100@" height="100%" noclick="true" sticky="1" stickytoinvis="0"
			watch="MinimapHover"
			ontriggerlua="self:SetVisible(NotEmpty(param{param}))"
		>
			<image texture="/ui/common/empty_pack.tga" color=".6 .6 .6 1" watch="MinimapHover"
				ontriggerlua="	if (param{param} ~= '') then
									self:SetTexture(param{param})
									self:SetColor('1 1 1 1')
								else
									self:SetTexture('/ui/common/empty_pack.tga')
									self:SetColor('.6 .6 .6 1')
								end"
			/>
			<frame color="invisible" borderthickness="1" bordercolor=".1 .1 .1 1"/>
		</panel>
	</template>

	<template name="minimap_inventory_item">
		<panel width="100@" height="100%" noclick="true">
			<image texture="/ui/common/empty_pack.tga" color=".6 .6 .6 1" watch="MinimapHover"
				ontriggerlua="	if (param{param} ~= '') then
									self:SetTexture(param{param})
									self:SetColor('1 1 1 1')
								else
									self:SetTexture('/ui/common/empty_pack.tga')
									self:SetColor('.6 .6 .6 1')
								end"
			/>
			<frame color="invisible" borderthickness="1" bordercolor=".1 .1 .1 1"/>
		</panel>
	</template>

	<effectpanel
		name="effect_panel"
		camerawidth="100a"
		cameraheight="100"
		noclick="true"
	/>


	<!-- Map Hover Popup
		Needs to align left or right based on mini map location selection
	-->
	<floater grow="true" regrow="1" x="0.5h" y="1.0h" align="left" valign="bottom" color="invisible" noclick="true" name="mini_map_hover" onloadlua="self:ForceToFront()" visible="false"
		watch="MinimapHover"
		ontriggerlua="
			if (GetCvarBool('ui_minimap_rightside')) then
				self:SetAlign('right')
			else
				self:SetAlign('left')
			end

			if (AtoB(param0)) then
				self:SetVisible(1)
			else
				self:SetVisible(0)
			end
		"
	>

		<panel grow="true" regrow="1" growinvis="0" color="0 0 0 .6" noclick="true">
			<frame color="invisible" borderthickness="1" bordercolor=".2 .2 .2 1" noclick="false"/>



			<panel
				visible="false"
				grow="true"
				regrow="true"
				float="bottom"
				watch="MinimapHover"
				ontriggerlua="if (AtoB(param0)) then self:SetVisible(AtoB(param1) and (not AtoB(param2))) end"
			>
				<panel grow="true" height="1.8h">
					<panel x="0.3h" y="0.3h" width="1.8h" height="1.8h">
						<image watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetTexture(param4) end" />
						<frame color="invisible" borderthickness="1" bordercolor=".2 .2 .2 1" noclick="false"/>
					</panel>
					<label x="2.3h" y="0.1h" height="100%" font="dyn_9" textvalign="center" color="1 1 1 1" noclick="true" watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetText(param3) self:SetWidth(GetStringWidth('dyn_9', param3) + self:GetXFromString('0.3h')) end" content="--" />
				</panel>
				<panel width="100%" height="0.2h" />

				<panel
					width="100%" height="0.5h"
					visible="true"
					watch="MinimapHover"
					ontriggerlua="
						if (AtoB(param0)) then
							self:SetVisible(tonumber(param5) > 0)
						end
					"
				>
					<panel width="-0.6h" align="center">
						<panel watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetWidth(FtoP(param5)) self:SetColor(Saturate(1 - (tonumber(param5) - 0.50) / 0.50), (tonumber(param5) + (((tonumber(param5) - 0.05) / 1.0) * 0.2)) / 0.45, 0, 1) end" color="0 1 0 0">
							<frame color="invisible" borderthickness="1" bordercolor="0 0 0 1" noclick="false"/>
						</panel>
					</panel>
				</panel>

				<panel
					width="100%" height="0.5h"
					visible="true"
					watch="MinimapHover"
					ontriggerlua="if (AtoB(param0)) then self:SetVisible(tonumber(param6) > 0) end"
				>
					<panel width="-0.6h" align="center">
						<panel texture="/ui/info/mana_pos.tga" watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetWidth(round(tonumber(param6)*100.0)..'%') end">
							<frame color="invisible" borderthickness="1" bordercolor="0 0 0 1" noclick="false"/>
						</panel>
					</panel>
				</panel>
				<panel width="100%" height="0.2h" />

				<panel grow="true" regrow="1" growinvis="0" height="1.7h" float="right" padding="0.1h" >
					<panel width="0.3h" height="100%"/>
					<instance name="minimap_inventory_item" param="7" />
					<instance name="minimap_inventory_item" param="8" />
					<instance name="minimap_inventory_item" param="9" />
					<instance name="minimap_inventory_item" param="10" />
					<instance name="minimap_inventory_item" param="11" />
					<instance name="minimap_inventory_item" param="12" />
					<instance name="minimap_inventory_item_hiding" param="13" />
					<panel width="0.3h" height="100%" sticky="1" stickytoinvis="0"/>
				</panel>

				<panel width="100%" height="0.2h" />
			</panel>


			<panel
				visible="false"
				grow="true"
				float="bottom"
				watch="MinimapHover"
				ontriggerlua="if (AtoB(param0)) then self:SetVisible(AtoB(param2) and (not AtoB(param1))) end"
			>
				<panel grow="true" height="1.8h">
					<panel x="0.3h" y="0.3h" width="1.8h" height="1.8h">
						<image watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetTexture(param4) end" />
						<frame color="invisible" borderthickness="1" bordercolor=".2 .2 .2 1" noclick="false"/>
					</panel>
					<label x="2.3h" y="0.1h" height="100%" font="dyn_9" textvalign="center" color="1 1 1 1" noclick="true" watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetText(param3) self:SetWidth(GetStringWidth('dyn_9', param3) + self:GetXFromString('0.3h')) end" content="--" />
				</panel>
				<panel width="100%" height="0.2h" sticky="true" stickytoinvis="false" />
			</panel>


			<panel
				visible="false"
				grow="true"
				growinvis="false"
				float="bottom"
				watch="MinimapHover"
				ontriggerlua="if (AtoB(param0)) then self:SetVisible((not AtoB(param2)) and (not AtoB(param1))) end"
			>
				<panel grow="true" height="1.8h">
					<panel x="0.3h" y="0.3h" width="1.8h" height="1.8h">
						<image watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetTexture(param4) end" />
						<frame color="invisible" borderthickness="1" bordercolor=".2 .2 .2 1" noclick="false"/>
					</panel>
					<label x="2.3h" y="0.1h" height="100%" font="dyn_9" textvalign="center" color="1 1 1 1" noclick="true" watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetText(param3) self:SetWidth(GetStringWidth('dyn_9', param3) + self:GetXFromString('0.3h')) end" content="--" />
				</panel>

				<panel
					width="100%" height="0.5h"
					visible="true"
					watch="MinimapHover"
					ontriggerlua="if (AtoB(param0)) then self:SetVisible(tonumber(param5) > 0) end"
				>
					<panel width="-0.6h" align="center">
						<panel width="2" color="1 0 0 1"/>
						<panel watch="MinimapHover" ontriggerlua="if (AtoB(param0)) then self:SetWidth(FtoP(param5)) if (not AtoB(param14)) then self:SetColor(Saturate(1 - (tonumber(param5) - 0.50) / 0.50), (tonumber(param5) + (((tonumber(param5) - 0.05) / 1.0) * 0.2)) / 0.45, 0, 1) else self:SetColor('1 1 0') end end" color="0 1 0 0">
							<frame color="invisible" borderthickness="1" bordercolor="0 0 0 1" noclick="false"/>
						</panel>
					</panel>
				</panel>
				<panel width="100%" height="0.2h" sticky="true" stickytoinvis="false" />
			</panel>
		</panel>
	</floater>

</interface>
